#!/bin/ash

SERVICE_NAME="PostgreSQL"

if [ "${DEBUG}" != "" ]; then
	printf "debuging \x1b[38:5:39m${SERVICE_NAME}\x1b[00m \n\n"
	printf "PGDATA    %s\n" "${PGDATA}"
	printf "CERT_SUBJ %s\n" "${CERT_SUBJ}"
	printf "DEBUG     %s\n\n" "${DEBUG}"
fi

function	do_as_postgres()
{
	local	cmd="${@}"

	[ "${DEBUG}" != "" ] && echo ${cmd}
	su - postgres -c "${cmd}"
}

function	do_sql()
{
	local	req="${1}"

	do_as_postgres "psql -c \"${req};\""
}

function	set_var()
{
	local	var_name="${1}"
	local	var_value="${2}"
	local	var_file="${PGDATA}/postgresql.conf"
	local	pos
	local	pos_last

	pos=$(grep -n "${var_name} =" "${var_file}" | cut -d':' -f1)
	sed -i "${pos}d" "${var_file}"
	sed -i "${pos}i${var_name} = ${var_value}" "${var_file}"
	printf "pos : %s\n" "${pos}"
}

function	mkdir_as_postgres()
{
	local	path="${1}"

	[ ! -d "${path}" ] && mkdir "${path}"
	chown postgres:postgres "${path}"
}

function	postgres_init()
{
	local	nb_line=$(($(wc -l ${PGDATA}/pg_hba.conf | cut -d" " -f1) - 1))

	mkdir_as_postgres "${PGDATA%\/*}"
	mkdir_as_postgres /run/postgresql/
	do_as_postgres "initdb -D ${PGDATA}"
	set_var "listen_addresses" "'*'"
	set_var "logging_collector" "on"
	set_var "log_directory" "'/var/log/postgresql/'"
	set_var "log_filename" "'postgresql.log'"
	set_var "log_file_mode" "0666"
	sed -i "${nb_line}ihost all all 0.0.0.0/0 md5" "${PGDATA}/pg_hba.conf"
}

function	postgres_db()
{
	do_as_postgres "pg_ctl start -D ${PGDATA}"
	do_sql "CREATE DATABASE ${DB_NAME}"
	do_sql "CREATE USER ${ADMIN_USER} WITH ENCRYPTED PASSWORD '${ADMIN_PASS}'"
	do_sql "GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} TO ${ADMIN_USER}"
	do_as_postgres "pg_ctl stop -D ${PGDATA}"
}

mkdir_as_postgres "${PGDATA}"
rm -rf "/run/postgresql"
mkdir_as_postgres "/run/postgresql"

if [ ! -f "${PGDATA}/PG_VERSION" ]; then
	printf "${SERVICE_NAME} \x1b[38:5:160mnot found\x1b[00m, initialize it\n"

	postgres_init
	postgres_db
else
	printf "${SERVICE_NAME} \x1b[38:5:76mfound\x1b[00m, Skiping initialization\n"
fi

chown -R root:root /var/log/postgresql
chmod -R 777 /var/log/postgresql

printf "${SERVICE_NAME} launched\n"

do_as_postgres "postgres -D ${PGDATA}"
