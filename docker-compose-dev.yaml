version: "3.9"

################################################################################
# DEFAULT CONF https://stackoverflow.com/a/65522511

x-healthcheck_conf: &healthcheck_conf
      interval: 15s
      retries: 30

x-restart: &restart
    restart: on-failure

################################################################################

services:
  ##############################################################################
  # NestJS
  nestjs:
    container_name: nestjs
    hostname: nestjs
    build:
      context: "./build/nodejs"
      target: "nodejs"
    depends_on:
      postgresql:
        condition: service_healthy
    command: [ "npm", "run", "dev" ]
    ports:
      - 3000:3000
      - 3001:3001
    networks:
      transendence:
        ipv4_address: "13.37.42.11"
    environment:
      - DB_USER=${ADMIN_USER?}
      - DB_PASS=${ADMIN_PASS?}
      - DB_NAME=${DB_NAME?}
      - API42_USERID=${API42_USERID?}
      - API42_SECRET=${API42_SECRET?}
      - API42_REDIRECTURL=${API42_REDIRECTURL_DEV?}
      - JWT_SECRET=${JWT_SECRET?}
      - PRODUCTION=0
    volumes:
      - type: bind
        source: ./volume/nodejs
        target: /usr/local/lib/nodejs
        bind:
          create_host_path: true
      - type: bind
        source: ./src/nestjs
        target: /shared/transcendence
        bind:
          create_host_path: true
    << : *restart
    healthcheck:
      test: "nc -w ${DOCKER_TIMEOUT?} 127.0.0.1 3000"
      << : *healthcheck_conf
  #
  ##############################################################################

  ##############################################################################
  # AngularJS
  angularjs:
    container_name: angularjs
    hostname: angularjs
    build:
      context: "./build/nodejs"
      target: "nodejs"
    command: [ "npm", "run", "dev" ]
    # depends_on:
    #   nestjs:
    #     condition: service_healthy
    ports:
      - 4200:4200
    networks:
      transendence:
        ipv4_address: "13.37.42.12"
    volumes:
      - type: bind
        source: ./volume/nodejs
        target: /usr/local/lib/nodejs
        bind:
          create_host_path: true
      - type: bind
        source: ./src/angularjs
        target: /shared/transcendence
        bind:
          create_host_path: true
      - type: bind
        source: ./volume/angularjs
        target: /build/
        bind:
          create_host_path: true
    << : *restart
    healthcheck:
      test: "nc -w ${DOCKER_TIMEOUT?} 127.0.0.1 4200"
      << : *healthcheck_conf
  #
  ##############################################################################

  ##############################################################################
  # PostgreSQL
  postgresql:
    container_name: postgresql
    build:
      context: "./build/postgresql"
      target: "packed"
    environment:
      - ADMIN_USER=${ADMIN_USER?}
      - ADMIN_PASS=${ADMIN_PASS?}
      - DB_NAME=${DB_NAME?}
      - PGDATA=/usr/local/pgsql/data
      - DOCKER_DEBUG=${DOCKER_DEBUG?}
    ports:
      - 5432:5432
    networks:
      transendence:
        ipv4_address: "13.37.42.13"
    volumes:
      - type: bind
        source: ./volume/postgresql
        target: /usr/local/pgsql/data
        bind:
          create_host_path: true
      - type: bind
        source: ./volume/log/postgresql
        target: /var/log/postgresql
        bind:
          create_host_path: true
    << : *restart
    healthcheck:
      test: "nc -w ${DOCKER_TIMEOUT?} 127.0.0.1 5432"
      << : *healthcheck_conf
  #
  ##############################################################################

networks:
  ##############################################################################
  # MAIN INTERNAL NETWORK (netpractice)
  transendence:
    name: transendence
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: transendence
    ipam:
      driver: default
      config:
        - subnet: 13.37.42.0/27
          ip_range: 13.37.42.0/27
          gateway: 13.37.42.1
  #
  ##############################################################################
