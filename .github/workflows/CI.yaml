name: CI

run-name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  SETUP_STR: |+
    pix
    1234
    1234
    1234
    https://localhost/login
    http://localhost:4200/login

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: "github"
        run: |+
          echo "Who launched: ${{github.actor}}"
          echo "On branch:    ${{github.ref_name}}"
          echo "Commit sha:   ${{github.sha}}"
      - name: "docker | compose"
        run: |+
          docker version
          docker compose version

  docker-prod-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env
        run: printf "${SETUP_STR}\n" | ./setup

      - name: Cleaning up previous run
        run: |+
          rm -rf ./volume
          docker compose down

      - name: Build prod
        timeout-minutes: 5
        run: docker compose build

  docker-prod-run:
    needs: docker-prod-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env
        run: printf "${SETUP_STR}\n" | ./setup

      - name: Cleaning up previous run
        run: |+
          rm -rf ./volume
          docker compose down

      - name: Executing prod
        timeout-minutes: 5
        run: docker compose up --build -d --wait

  docker-dev-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env
        run: printf "${SETUP_STR}\n" | ./setup

      - name: Cleaning up previous run
        run: |+
          rm -rf ./volume
          docker compose down

      - name: Build debug
        timeout-minutes: 5
        run: docker compose -f docker-compose-dev.yaml build

  docker-dev-run:
    needs: docker-dev-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env
        run: printf "${SETUP_STR}\n" | ./setup

      - name: Cleaning up previous run
        run: |+
          rm -rf ./volume
          docker compose down

      - name: Executing debug
        timeout-minutes: 5
        run: docker compose -f docker-compose-dev.yaml up --build -d --wait


  nest-database-jest:
    needs:
      - docker-dev-run
      - docker-prod-run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env
        run: printf "${SETUP_STR}\n" | ./setup

      - name: Cleaning up previous run
        run: |+
          rm -rf ./volume
          docker compose down

      - name: Compose UP
        timeout-minutes: 5
        run: docker compose -f docker-compose-dev.yaml up --build -d --wait

      - name: Running Jest
        timeout-minutes: 5
        run: docker compose -f docker-compose-dev.yaml exec -it nestjs npm run test
